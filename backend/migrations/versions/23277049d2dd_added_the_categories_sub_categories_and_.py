"""added the categories, sub categories and post categories

Revision ID: 23277049d2dd
Revises: eb6b0a78ff86
Create Date: 2025-03-04 17:05:07.970481

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "23277049d2dd"
down_revision: Union[str, None] = "eb6b0a78ff86"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.Unicode(length=128), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.Column("deleted_by", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "sub_categories",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.Unicode(length=128), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.Column("deleted_by", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "post_categories",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("post_id", sa.UUID(), nullable=False),
        sa.Column("category_id", sa.UUID(), nullable=True),
        sa.Column("sub_category_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.Column("deleted_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["sub_category_id"],
            ["sub_categories.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.alter_column(
        "posts",
        "title",
        existing_type=sa.TEXT(),
        type_=sa.Unicode(length=255),
        existing_nullable=False,
    )
    op.create_unique_constraint(None, "posts", ["uuid"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "posts", type_="unique")
    op.alter_column(
        "posts",
        "title",
        existing_type=sa.Unicode(length=255),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.drop_table("post_categories")
    op.drop_table("sub_categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
